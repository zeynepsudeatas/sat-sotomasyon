package application;


import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.List;
import java.util.ResourceBundle;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.SelectionModel;
import javafx.scene.control.Tab;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.AnchorPane;
import javafx.stage.Stage;

import java.sql.*;
import com.isteMySQL.Util.VeritabanıUtil;

public class urunekleController {
	Connection baglanti=null;
    PreparedStatement sorguIfadesi=null;
    ResultSet getirilen=null;
    String sql;
    
	public urunekleController() {
		baglanti=VeritabanıUtil.Baglan();
	}
		

    @FXML
    private ResourceBundle resources;

    @FXML
    private URL location;

    @FXML
    private Button btn_ekle;

    @FXML
    private Button btn_guncelle;

    @FXML
    private Button btn_sil;

    @FXML
    private Button btn_sorgula;
    
    @FXML
    private Button btn_cks;

    @FXML
    private TableColumn<kayitlar_urun, String> column_acıklama;

    @FXML
    private TableColumn<kayitlar_urun, Double> column_adet;

    @FXML
    private TableColumn<kayitlar_urun, String> column_beden;

    @FXML
    private TableColumn<kayitlar_urun, Double> column_fiyat;

    @FXML
    private TableColumn<kayitlar_urun, String> column_kategori;

    @FXML
    private TableColumn<kayitlar_urun, String> column_renk;

    @FXML
    private TableColumn<kayitlar_urun, String> column_urunadi;
    
    @FXML
    private TableView<kayitlar_urun> tableview;

    @FXML
    private Label lbl1;

    @FXML
    private Label lbl2;

    @FXML
    private Label lbl3;

    @FXML
    private Label lbl4;

    @FXML
    private Label lbl5;

    @FXML
    private Label lbl6;

    @FXML
    private Label lbl7;

    @FXML
    private Label lbl8;
    
    @FXML
    private Label lbl_sonuc;

    @FXML
    private TextField txt1;

    @FXML
    private TextField txt2;

    @FXML
    private TextField txt3;

    @FXML
    private TextField txt4;

    @FXML
    private TextField txt5;

    @FXML
    private TextField txt6;

    @FXML
    private TextField txt7;

    @FXML
    private TextField txt8;
 
    
    ObservableList<kayitlar_urun> veriler;
    @FXML
    void btn_ekle_Click(ActionEvent event) {
    	sql="insert into urunekle(kategori,urunadi,beden,renk,fiyat,adet,aciklama) values(?,?,?,?,?,?,?)";
    	try {
    		sorguIfadesi=baglanti.prepareStatement(sql);
			sorguIfadesi.setString(1, txt1.getText().trim());
			sorguIfadesi.setString(2, txt2.getText().trim());
			sorguIfadesi.setString(3, txt3.getText().trim());
			sorguIfadesi.setString(4, txt4.getText().trim());
			sorguIfadesi.setString(5, txt5.getText().trim());
			sorguIfadesi.setString(6, txt6.getText().trim());
			sorguIfadesi.setString(7, txt7.getText().trim());

			sorguIfadesi.executeUpdate();
			
	    	System.out.println("Ekleme başarılı");
	    	
	    	Alert alert=new Alert(AlertType.ERROR);
			alert.setTitle("Satıs ve Stok Otomasonu");
			alert.setHeaderText("Bildirim Mesajı");
			alert.setContentText("Ürün ekleme işlemi başarılı");
			alert.showAndWait();
	    	
	    	
	    	tableview.setEditable(true);
	    	tableview.setItems(veriler);
			
    	}		
		 catch (Exception e) {		 
			 System.out.println(e.getMessage().toString());
			 
			 
    
		}
    	
    }
    	
 

    @FXML
    void btn_guncelle_Click(ActionEvent event) {
        sql="update urunekle set kategori=? and urunadi=? and renk=? and fiyat=? and adet=? and aciklama=? where beden=? ";
    	try {
    		sorguIfadesi=baglanti.prepareStatement(sql);
			sorguIfadesi.setString(1, txt1.getText().trim());
			sorguIfadesi.setString(2, txt2.getText().trim());
			sorguIfadesi.setString(3, txt4.getText().trim());
			sorguIfadesi.setString(4, String.valueOf( txt5.getText()).trim());
			sorguIfadesi.setString(5, String.valueOf( txt5.getText()).trim());
			sorguIfadesi.setString(6, txt7.getText().trim());
			sorguIfadesi.setString(7, txt3.getText().trim());

			sorguIfadesi.executeUpdate();
			lbl_sonuc.setText("Urun güncelleme gerçekleşti...");
			
			Alert alert=new Alert(AlertType.WARNING);
			alert.setTitle("Satıs ve Stok Otomasonu");
			alert.setHeaderText("Bildirim Mesajı");
			alert.setContentText("Ürün güncelleme gerçekleşti...");
			alert.showAndWait();

		} catch (Exception e) {
			System.out.println(e.getMessage().toString());
		}
    }
    
    @FXML
    void btn_cks_Click(ActionEvent event) {
    	try {
    		Stage stage=new Stage();
    		AnchorPane pane1=(AnchorPane) FXMLLoader.load(getClass().getResource("menu.fxml"));
    		Scene scene1=new Scene(pane1);
    		stage.setScene(scene1);
    		stage.show();
    	}
    	
    	catch(Exception e) {
    		e.printStackTrace();
    		Alert alert=new Alert(AlertType.CONFIRMATION);
        	alert.setTitle("satıs stok");
        	alert.setHeaderText("cıkıs");
        	alert.setContentText("çıkmak istediğinize emin misiniz?");
        	alert.showAndWait();  		
    	}

    }


    @FXML
    void btn_sil_Click(ActionEvent event) {
    	sql="delete from urunekle where kategori=? and urunadi=? and beden=? and renk=? and fiyat=? and adet=? and aciklama=?";
    	try {
			sorguIfadesi=baglanti.prepareStatement(sql);
			sorguIfadesi.setString(1, txt1.getText().trim());
			sorguIfadesi.setString(2, txt2.getText().trim());
			sorguIfadesi.setString(3, txt3.getText().trim());
			sorguIfadesi.setString(4, txt4.getText().trim());
			sorguIfadesi.setString(5, txt5.getText().trim());
			sorguIfadesi.setString(6, txt6.getText().trim());
			sorguIfadesi.setString(7, txt7.getText().trim());

			sorguIfadesi.executeUpdate();
			lbl_sonuc.setText("Urun silme gerçekleşti...");
			
			Alert alert=new Alert(AlertType.ERROR);
			alert.setTitle("Satıs ve Stok Otomasonu");
			alert.setHeaderText("Bildirim Mesajı");
			alert.setContentText("Ürün silme işlemi gerçekleşti...");
			alert.showAndWait();

		} catch (Exception e) {
			// TODO: handle exception
			lbl_sonuc.setText(e.getMessage().toString());
		}
    	

    }

    @FXML
    void btn_sorgula_Click(ActionEvent event) {
    	if(btn_sorgula.getText()=="") {
    		sql="select * from urunekle";    		
    	}else {
         	sql="select * from urunekle where kategori=? like '%"+txt1.getText()+"%' and urunadi=? like '%"+txt2.getText()+"%' and beden=? like '%"+txt3.getText()+"%' and renk=? like '%"+txt4.getText()+"%' and fiyat=? like '%"+txt5.getText()+"%' and adet=? like '%"+txt6.getText()+"%' and aciklama=? like '%"+txt7.getText()+"%'";

    	}
    	DegerleriGetir(tableview);
    	try {
			sorguIfadesi=baglanti.prepareStatement(sql);
			sorguIfadesi.setString(1, txt1.getText().trim());
			sorguIfadesi.setString(2, txt2.getText().trim());
			sorguIfadesi.setString(3, txt3.getText().trim());
			sorguIfadesi.setString(4, txt4.getText().trim());
			sorguIfadesi.setString(5, txt5.getText().trim());
			sorguIfadesi.setString(6, txt6.getText().trim());
			sorguIfadesi.setString(7, txt7.getText().trim());

			sorguIfadesi.executeUpdate();
			lbl_sonuc.setText("Urun arama gerçekleşti...");

		} catch (Exception e) {
			// TODO: handle exception
			lbl_sonuc.setText(e.getMessage().toString());
		}

    }

    public void DegerleriGetir(TableView tablo) {
    	sql="select * from urunekle";
    	
    	ObservableList<kayitlar_urun> kayitlarliste=FXCollections.observableArrayList();
    	try {
    		sorguIfadesi=baglanti.prepareStatement(sql);
    		ResultSet getirilen=sorguIfadesi.executeQuery();
       		while(getirilen.next()){
    	    kayitlarliste.add(new kayitlar_urun (getirilen.getString("kategori"), getirilen.getString("urunadi"), getirilen.getString("beden"), getirilen.getString("renk"), getirilen.getDouble("fiyat"), getirilen.getDouble("adet"), getirilen.getString("aciklama")));
    			
    		}
    		column_kategori.setCellValueFactory(new PropertyValueFactory<> ("kategorim"));
    		column_urunadi.setCellValueFactory(new PropertyValueFactory<> ("urunadim"));
    		column_beden.setCellValueFactory(new PropertyValueFactory<> ("bedenm"));
    		column_renk.setCellValueFactory(new PropertyValueFactory<> ("renkm"));
    		column_fiyat.setCellValueFactory(new PropertyValueFactory<> ("fiyatm"));
    		column_adet.setCellValueFactory(new PropertyValueFactory<> ("adetm"));
    		column_acıklama.setCellValueFactory(new PropertyValueFactory<> ("aciklamam"));
    		tableview.setItems(kayitlarliste);
   
    	
		} catch (Exception e) {
			System.out.println(e.getMessage().toString());
		}
    }
    
    
    @FXML
    void tableview_MoıuseClick(MouseEvent event) {
    	kayitlar_urun kayit=new kayitlar_urun(sql, sql, sql, sql, 0, 0, sql);
		 kayit=(kayitlar_urun) tableview.getItems().get(tableview.getSelectionModel().getSelectedIndex());
		 txt1.setText(kayit.getKategori());
		 txt2.setText(kayit.getUrunadi());
		 txt3.setText(kayit.getBeden());
		 txt4.setText(kayit.getRenk());
		 txt5.setText(String.valueOf(kayit.getFiyat()));
		 txt6.setText(String.valueOf(kayit.getAdet()));		
		 txt7.setText(kayit.getAciklama());

    	

    }
    
    @FXML
    void initialize() { 
    	
       DegerleriGetir(tableview);
    }

}
